{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "AggregatorAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "19": "contracts/PriceFeedConsumer.sol",
    "6": "C:/Users/User/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol"
  },
  "ast": {
    "absolutePath": "contracts/PriceFeedConsumer.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        881
      ],
      "PriceFeedConsumer": [
        257
      ]
    },
    "id": 258,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 217,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:19"
      },
      {
        "absolutePath": "C:/Users/User/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 218,
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 882,
        "src": "57:76:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 257,
        "linearizedBaseContracts": [
          257
        ],
        "name": "PriceFeedConsumer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 221,
            "mutability": "mutable",
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "168:40:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$881",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 220,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 219,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 881,
                "src": "168:21:19"
              },
              "referencedDeclaration": 881,
              "src": "168:21:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$881",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "254:69:19",
              "statements": [
                {
                  "expression": {
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 226,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "264:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$881",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 228,
                          "name": "AggregatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "298:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 227,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "276:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$881_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "276:40:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$881",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "264:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$881",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "264:52:19"
                }
              ]
            },
            "id": 233,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "AggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "227:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "226:27:19"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:0:19"
            },
            "scope": 257,
            "src": "215:108:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "429:222:19",
              "statements": [
                {
                  "assignments": [
                    240,
                    242,
                    244,
                    246,
                    248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "453:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "453:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 242,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "481:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "481:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 244,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "504:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "504:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "532:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "532:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 248,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "560:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 247,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "560:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 249,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "595:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$881",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 880,
                      "src": "595:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "439:183:19"
                },
                {
                  "expression": {
                    "id": 253,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 242,
                    "src": "639:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 238,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "632:12:19"
                }
              ]
            },
            "documentation": {
              "id": 234,
              "nodeType": "StructuredDocumentation",
              "src": "329:43:19",
              "text": " Returns the latest price"
            },
            "functionSelector": "8e15f473",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "400:2:19"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "424:3:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:3:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "423:5:19"
            },
            "scope": 257,
            "src": "377:274:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 258,
        "src": "135:518:19"
      }
    ],
    "src": "32:622:19"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161022838038061022883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610197806100916000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004e565b6040516100459190610158565b60405180910390f35b60008060008060008060008054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100a357600080fd5b505afa1580156100b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100db9190610109565b50919850505050505050505090565b805169ffffffffffffffffffff8116811461010457600080fd5b919050565b600080600080600060a08688031215610120578081fd5b610129866100ea565b945060208601519350604086015192506060860151915061014c608087016100ea565b90509295509295909350565b9081526020019056fea26469706673582212206954b55e31981d16df6d36b5957932d2691aadb15092c81ae4b17c0406817ffe64736f6c63430008000033",
  "bytecodeSha1": "95fccfe29a3467488653bf0489edb7be3cfa3266",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "PriceFeedConsumer",
  "coverageMap": {
    "branches": {
      "19": {},
      "6": {}
    },
    "statements": {
      "19": {},
      "6": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004e565b6040516100459190610158565b60405180910390f35b60008060008060008060008054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100a357600080fd5b505afa1580156100b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100db9190610109565b50919850505050505050505090565b805169ffffffffffffffffffff8116811461010457600080fd5b919050565b600080600080600060a08688031215610120578081fd5b610129866100ea565b945060208601519350604086015192506060860151915061014c608087016100ea565b90509295509295909350565b9081526020019056fea26469706673582212206954b55e31981d16df6d36b5957932d2691aadb15092c81ae4b17c0406817ffe64736f6c63430008000033",
  "deployedSourceMap": "135:518:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:274;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;424:3;453:14;481:9;504:14;532;560:22;595:9;;;;;;;;-1:-1:-1;;;;;595:9:19;-1:-1:-1;;;;;595:25:19;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;439:183:19;;-1:-1:-1;;;;;;;;;377:274:19;:::o;14:181:22:-;94:13;;147:22;136:34;;126:45;;116:2;;185:1;182;175:12;116:2;75:120;;;:::o;200:487::-;;;;;;388:3;376:9;367:7;363:23;359:33;356:2;;;410:6;402;395:22;356:2;438:41;469:9;438:41;:::i;:::-;428:51;;519:2;508:9;504:18;498:25;488:35;;563:2;552:9;548:18;542:25;532:35;;607:2;596:9;592:18;586:25;576:35;;630:51;676:3;665:9;661:19;630:51;:::i;:::-;620:61;;346:341;;;;;;;;:::o;692:175::-;836:25;;;824:2;809:18;;791:76::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getLatestPrice()": {
        "notice": "Returns the latest price"
      }
    },
    "version": 1
  },
  "offset": [
    135,
    653
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x109 JUMP JUMPDEST POP SWAP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x120 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x129 DUP7 PUSH2 0xEA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x14C PUSH1 0x80 DUP8 ADD PUSH2 0xEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x54B55E31981D16DF6D36 0xB5 SWAP6 PUSH26 0x32D2691AADB15092C81AE4B17C0406817FFE64736F6C63430008 STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        135,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "DUP1",
      "path": "19"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "REVERT",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "17": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "POP",
      "path": "19"
    },
    "18": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "21": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "LT",
      "path": "19"
    },
    "22": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "29": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "SHR",
      "path": "19"
    },
    "32": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "DUP1",
      "path": "19"
    },
    "33": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8E15F473"
    },
    "38": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "EQ",
      "path": "19"
    },
    "39": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "43": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "44": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "DUP1",
      "path": "19"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        135,
        653
      ],
      "op": "REVERT",
      "path": "19"
    },
    "48": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "49": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38"
    },
    "52": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E"
    },
    "55": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "jump": "i",
      "offset": [
        377,
        651
      ],
      "op": "JUMP",
      "path": "19"
    },
    "56": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "57": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "59": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "60": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x45"
    },
    "63": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "64": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "65": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x158"
    },
    "68": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "jump": "i",
      "offset": [
        377,
        651
      ],
      "op": "JUMP",
      "path": "19"
    },
    "69": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "70": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "72": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "73": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "DUP1",
      "path": "19"
    },
    "74": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "75": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "SUB",
      "path": "19"
    },
    "76": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "77": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "RETURN",
      "path": "19"
    },
    "78": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "79": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        424,
        427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "81": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        453,
        467
      ],
      "op": "DUP1",
      "path": "19"
    },
    "82": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        481,
        490
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "84": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        504,
        518
      ],
      "op": "DUP1",
      "path": "19"
    },
    "85": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        532,
        546
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "87": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        560,
        582
      ],
      "op": "DUP1",
      "path": "19"
    },
    "88": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "90": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "DUP1",
      "path": "19"
    },
    "91": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "92": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "93": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "96": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "EXP",
      "path": "19"
    },
    "97": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "98": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "DIV",
      "path": "19"
    },
    "99": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "105": {
      "op": "SHL"
    },
    "106": {
      "op": "SUB"
    },
    "107": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        604
      ],
      "op": "AND",
      "path": "19"
    },
    "108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "114": {
      "op": "SHL"
    },
    "115": {
      "op": "SUB"
    },
    "116": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        620
      ],
      "op": "AND",
      "path": "19"
    },
    "117": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        620
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFEAF968C"
    },
    "122": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "124": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "125": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP2",
      "path": "19"
    },
    "126": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "131": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "AND",
      "path": "19"
    },
    "132": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "134": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "SHL",
      "path": "19"
    },
    "135": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP2",
      "path": "19"
    },
    "136": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "137": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "139": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ADD",
      "path": "19"
    },
    "140": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA0"
    },
    "142": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "144": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "145": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "146": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP4",
      "path": "19"
    },
    "147": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "SUB",
      "path": "19"
    },
    "148": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP2",
      "path": "19"
    },
    "149": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP7",
      "path": "19"
    },
    "150": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "151": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "152": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "153": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "154": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "155": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA3"
    },
    "158": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "159": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "161": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "162": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "REVERT",
      "path": "19"
    },
    "163": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "164": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "POP",
      "path": "19"
    },
    "165": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "GAS",
      "path": "19"
    },
    "166": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "167": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "168": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "169": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "170": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB7"
    },
    "173": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "174": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "175": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "177": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "178": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "179": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "180": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "182": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "REVERT",
      "path": "19"
    },
    "183": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "184": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "POP",
      "path": "19"
    },
    "185": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "POP",
      "path": "19"
    },
    "186": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "POP",
      "path": "19"
    },
    "187": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "POP",
      "path": "19"
    },
    "188": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "190": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "191": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "192": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "194": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "NOT",
      "path": "19"
    },
    "195": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "197": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP3",
      "path": "19"
    },
    "198": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ADD",
      "path": "19"
    },
    "199": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "AND",
      "path": "19"
    },
    "200": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP3",
      "path": "19"
    },
    "201": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ADD",
      "path": "19"
    },
    "202": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP1",
      "path": "19"
    },
    "203": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "205": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "206": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "POP",
      "path": "19"
    },
    "207": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "DUP2",
      "path": "19"
    },
    "208": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "ADD",
      "path": "19"
    },
    "209": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "210": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDB"
    },
    "213": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "214": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "215": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x109"
    },
    "218": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "jump": "i",
      "offset": [
        595,
        622
      ],
      "op": "JUMP",
      "path": "19"
    },
    "219": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        595,
        622
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "220": {
      "op": "POP"
    },
    "221": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        439,
        622
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "222": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        439,
        622
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "223": {
      "op": "POP"
    },
    "224": {
      "op": "POP"
    },
    "225": {
      "op": "POP"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "op": "POP"
    },
    "228": {
      "op": "POP"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "op": "POP"
    },
    "231": {
      "op": "POP"
    },
    "232": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "offset": [
        377,
        651
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "233": {
      "fn": "PriceFeedConsumer.getLatestPrice",
      "jump": "o",
      "offset": [
        377,
        651
      ],
      "op": "JUMP",
      "path": "19"
    },
    "234": {
      "op": "JUMPDEST"
    },
    "235": {
      "op": "DUP1"
    },
    "236": {
      "op": "MLOAD"
    },
    "237": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "AND"
    },
    "250": {
      "op": "DUP2"
    },
    "251": {
      "op": "EQ"
    },
    "252": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "255": {
      "op": "JUMPI"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "op": "REVERT"
    },
    "260": {
      "op": "JUMPDEST"
    },
    "261": {
      "op": "SWAP2"
    },
    "262": {
      "op": "SWAP1"
    },
    "263": {
      "op": "POP"
    },
    "264": {
      "jump": "o",
      "op": "JUMP"
    },
    "265": {
      "op": "JUMPDEST"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "268": {
      "op": "DUP1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "271": {
      "op": "DUP1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "276": {
      "op": "DUP7"
    },
    "277": {
      "op": "DUP9"
    },
    "278": {
      "op": "SUB"
    },
    "279": {
      "op": "SLT"
    },
    "280": {
      "op": "ISZERO"
    },
    "281": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "284": {
      "op": "JUMPI"
    },
    "285": {
      "op": "DUP1"
    },
    "286": {
      "op": "DUP2"
    },
    "287": {
      "op": "REVERT"
    },
    "288": {
      "op": "JUMPDEST"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x129"
    },
    "292": {
      "op": "DUP7"
    },
    "293": {
      "op": "PUSH2",
      "value": "0xEA"
    },
    "296": {
      "jump": "i",
      "op": "JUMP"
    },
    "297": {
      "op": "JUMPDEST"
    },
    "298": {
      "op": "SWAP5"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "302": {
      "op": "DUP7"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MLOAD"
    },
    "305": {
      "op": "SWAP4"
    },
    "306": {
      "op": "POP"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "309": {
      "op": "DUP7"
    },
    "310": {
      "op": "ADD"
    },
    "311": {
      "op": "MLOAD"
    },
    "312": {
      "op": "SWAP3"
    },
    "313": {
      "op": "POP"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "316": {
      "op": "DUP7"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "op": "MLOAD"
    },
    "319": {
      "op": "SWAP2"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "op": "PUSH2",
      "value": "0x14C"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "326": {
      "op": "DUP8"
    },
    "327": {
      "op": "ADD"
    },
    "328": {
      "op": "PUSH2",
      "value": "0xEA"
    },
    "331": {
      "jump": "i",
      "op": "JUMP"
    },
    "332": {
      "op": "JUMPDEST"
    },
    "333": {
      "op": "SWAP1"
    },
    "334": {
      "op": "POP"
    },
    "335": {
      "op": "SWAP3"
    },
    "336": {
      "op": "SWAP6"
    },
    "337": {
      "op": "POP"
    },
    "338": {
      "op": "SWAP3"
    },
    "339": {
      "op": "SWAP6"
    },
    "340": {
      "op": "SWAP1"
    },
    "341": {
      "op": "SWAP4"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "jump": "o",
      "op": "JUMP"
    },
    "344": {
      "op": "JUMPDEST"
    },
    "345": {
      "op": "SWAP1"
    },
    "346": {
      "op": "DUP2"
    },
    "347": {
      "op": "MSTORE"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "350": {
      "op": "ADD"
    },
    "351": {
      "op": "SWAP1"
    },
    "352": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7c874542b13b791d035cb952871e14df63082139",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract PriceFeedConsumer {\n    AggregatorV3Interface internal priceFeed;\n\n    constructor(address AggregatorAddress) {\n        priceFeed = AggregatorV3Interface(AggregatorAddress);\n    }\n\n    /**\n     * Returns the latest price\n     */\n    function getLatestPrice() public view returns (int) {\n        (\n            uint80 roundID,\n            int price,\n            uint startedAt,\n            uint timeStamp,\n            uint80 answeredInRound\n        ) = priceFeed.latestRoundData();\n        return price;\n    }\n}\n",
  "sourceMap": "135:518:19:-:0;;;215:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;264:9;:52;;-1:-1:-1;;;;;;264:52:19;-1:-1:-1;;;;;264:52:19;;;;;;;;;;135:518;;14:310:22;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:22;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:22:o;:::-;135:518:19;;;;;;",
  "sourcePath": "contracts/PriceFeedConsumer.sol",
  "type": "contract"
}