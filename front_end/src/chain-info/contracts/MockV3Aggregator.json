{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "int256",
          "name": "_initialAnswer",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "int256",
          "name": "current",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "AnswerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "startedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        }
      ],
      "name": "NewRound",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        }
      ],
      "name": "updateAnswer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startedAt",
          "type": "uint256"
        }
      ],
      "name": "updateRoundData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/User/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
    "1": "C:/Users/User/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
    "2": "C:/Users/User/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "3": "contracts/test/MockV3Aggregator.sol"
  },
  "ast": {
    "absolutePath": "contracts/test/MockV3Aggregator.sol",
    "exportedSymbols": {
      "AggregatorInterface": [
        262
      ],
      "AggregatorV2V3Interface": [
        214
      ],
      "AggregatorV3Interface": [
        308
      ],
      "MockV3Aggregator": [
        205
      ]
    },
    "id": 206,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "C:/Users/User/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 206,
        "sourceUnit": 215,
        "src": "57:78:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "AggregatorV2V3Interface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 214,
              "src": "429:23:3"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "429:23:3"
          }
        ],
        "contractDependencies": [
          214,
          262,
          308
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "137:262:3",
          "text": " @title MockV3Aggregator\n @notice Based on the FluxAggregator contract\n @notice Use this contract when you need to test\n other contract's ability to read data from an\n aggregator contract, but how the aggregator got\n its answer is unimportant"
        },
        "fullyImplemented": true,
        "id": 205,
        "linearizedBaseContracts": [
          205,
          214,
          308,
          262
        ],
        "name": "MockV3Aggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              279
            ],
            "constant": true,
            "functionSelector": "54fd4d50",
            "id": 9,
            "mutability": "constant",
            "name": "version",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "482:8:3"
            },
            "scope": 205,
            "src": "458:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "501:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              269
            ],
            "constant": false,
            "functionSelector": "313ce567",
            "id": 12,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 11,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "520:8:3"
            },
            "scope": 205,
            "src": "507:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 10,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "507:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              221
            ],
            "constant": false,
            "functionSelector": "50d25bcd",
            "id": 15,
            "mutability": "mutable",
            "name": "latestAnswer",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 14,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "555:8:3"
            },
            "scope": 205,
            "src": "541:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 13,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "541:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              226
            ],
            "constant": false,
            "functionSelector": "8205bf6a",
            "id": 18,
            "mutability": "mutable",
            "name": "latestTimestamp",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 17,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "595:8:3"
            },
            "scope": 205,
            "src": "580:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "580:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              231
            ],
            "constant": false,
            "functionSelector": "668a0f02",
            "id": 21,
            "mutability": "mutable",
            "name": "latestRound",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 20,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "638:8:3"
            },
            "scope": 205,
            "src": "623:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              238
            ],
            "constant": false,
            "functionSelector": "b5ab58dc",
            "id": 26,
            "mutability": "mutable",
            "name": "getAnswer",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 25,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "697:8:3"
            },
            "scope": 205,
            "src": "663:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
              "typeString": "mapping(uint256 => int256)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "671:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "663:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                "typeString": "mapping(uint256 => int256)"
              },
              "valueType": {
                "id": 23,
                "name": "int256",
                "nodeType": "ElementaryTypeName",
                "src": "682:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              245
            ],
            "constant": false,
            "functionSelector": "b633620c",
            "id": 31,
            "mutability": "mutable",
            "name": "getTimestamp",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 30,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "754:8:3"
            },
            "scope": 205,
            "src": "719:56:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 27,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "727:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "719:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 28,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "738:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "getStartedAt",
            "nodeType": "VariableDeclaration",
            "scope": 205,
            "src": "779:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "787:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "779:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 33,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "798:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "903:65:3",
              "statements": [
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "909:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "920:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "909:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "909:20:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47,
                        "name": "_initialAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "948:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 46,
                      "name": "updateAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "935:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "935:28:3"
                }
              ]
            },
            "id": 51,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "849:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_initialAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "870:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:52:3"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:0:3"
            },
            "scope": 205,
            "src": "832:136:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1025:227:3",
              "statements": [
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "latestAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1031:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1046:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1031:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:22:3"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "latestTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1059:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 61,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1077:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1077:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1059:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:33:3"
                },
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1098:13:3",
                    "subExpression": {
                      "id": 65,
                      "name": "latestRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1098:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:13:3"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68,
                        "name": "getAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1117:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                          "typeString": "mapping(uint256 => int256)"
                        }
                      },
                      "id": 70,
                      "indexExpression": {
                        "id": 69,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1127:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1117:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1142:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1117:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:32:3"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74,
                        "name": "getTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1155:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "id": 75,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1168:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1155:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 77,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1183:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1183:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1155:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:43:3"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "getStartedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1204:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 83,
                      "indexExpression": {
                        "id": 82,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1217:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1204:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 84,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1232:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1232:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1204:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:43:3"
                }
              ]
            },
            "functionSelector": "a87a20ce",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "999:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "993:24:3"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:0:3"
            },
            "scope": 205,
            "src": "972:280:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1381:221:3",
              "statements": [
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "latestRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1387:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "_roundId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1401:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      }
                    },
                    "src": "1387:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:22:3"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "latestAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1415:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1430:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1415:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:22:3"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "latestTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1443:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1461:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1443:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:28:3"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 112,
                        "name": "getAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1477:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                          "typeString": "mapping(uint256 => int256)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "id": 113,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1487:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1477:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 115,
                      "name": "_answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1502:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1477:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:32:3"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 118,
                        "name": "getTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1515:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "id": 119,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1528:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1515:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 121,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1543:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1515:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:38:3"
                },
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 124,
                        "name": "getStartedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1559:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "id": 125,
                        "name": "latestRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1572:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1559:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_startedAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1587:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1559:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:38:3"
                }
              ]
            },
            "functionSelector": "4aa2011f",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateRoundData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1286:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1307:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1327:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_startedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1351:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1280:93:3"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:0:3"
            },
            "scope": 205,
            "src": "1256:346:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              294
            ],
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1824:143:3",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 147,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "1845:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 148,
                          "name": "getAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1861:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                            "typeString": "mapping(uint256 => int256)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "id": 149,
                          "name": "_roundId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1871:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1861:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 151,
                          "name": "getStartedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1888:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 153,
                        "indexExpression": {
                          "id": 152,
                          "name": "_roundId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1901:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1888:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 154,
                          "name": "getTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1918:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 156,
                        "indexExpression": {
                          "id": 155,
                          "name": "_roundId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1931:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1918:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 157,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "1948:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "id": 158,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1837:125:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 159,
                  "nodeType": "Return",
                  "src": "1830:132:3"
                }
              ]
            },
            "functionSelector": "9a6fc8f5",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 135,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1671:8:3"
            },
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1628:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1627:17:3"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1700:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1722:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1743:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1768:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1793:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:129:3"
            },
            "scope": 205,
            "src": "1606:361:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              307
            ],
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2177:174:3",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 177,
                            "name": "latestRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2205:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2198:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint80_$",
                            "typeString": "type(uint80)"
                          },
                          "typeName": {
                            "id": 175,
                            "name": "uint80",
                            "nodeType": "ElementaryTypeName",
                            "src": "2198:6:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2198:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 179,
                          "name": "getAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "2225:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_int256_$",
                            "typeString": "mapping(uint256 => int256)"
                          }
                        },
                        "id": 181,
                        "indexExpression": {
                          "id": 180,
                          "name": "latestRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2235:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2225:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 182,
                          "name": "getStartedAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "2255:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 184,
                        "indexExpression": {
                          "id": 183,
                          "name": "latestRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2268:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2255:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 185,
                          "name": "getTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "2288:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 187,
                        "indexExpression": {
                          "id": 186,
                          "name": "latestRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2301:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2288:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 190,
                            "name": "latestRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2328:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2321:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint80_$",
                            "typeString": "type(uint80)"
                          },
                          "typeName": {
                            "id": 188,
                            "name": "uint80",
                            "nodeType": "ElementaryTypeName",
                            "src": "2321:6:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2321:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "id": 192,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2190:156:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 174,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "2183:163:3"
                }
              ]
            },
            "functionSelector": "feaf968c",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "latestRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 163,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2024:8:3"
            },
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1995:2:3"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2053:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2075:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2096:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2121:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2146:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2045:129:3"
            },
            "scope": 205,
            "src": "1971:380:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              274
            ],
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "2443:51:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c",
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2456:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f07fb5b1ad79aac528cd96a1cc4b4ec6f7cefc63060a932b3b6750094ba19ff0",
                      "typeString": "literal_string \"v0.6/tests/MockV3Aggregator.sol\""
                    },
                    "value": "v0.6/tests/MockV3Aggregator.sol"
                  },
                  "functionReturnParameters": 200,
                  "id": 202,
                  "nodeType": "Return",
                  "src": "2449:40:3"
                }
              ]
            },
            "functionSelector": "7284e416",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "description",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 197,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2404:8:3"
            },
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2375:2:3"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "2426:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2425:15:3"
            },
            "scope": 205,
            "src": "2355:139:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 206,
        "src": "400:2096:3"
      }
    ],
    "src": "32:2533:3"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516105ad3803806105ad83398101604081905261002f916100a4565b6000805460ff191660ff84161790556100478161004e565b50506100fd565b60018190554260025560038054906000610067836100d6565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b600080604083850312156100b6578182fd5b825160ff811681146100c6578283fd5b6020939093015192949293505050565b60006000198214156100f657634e487b7160e01b81526011600452602481fd5b5060010190565b6104a18061010c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101265780639a6fc8f51461012e578063a87a20ce14610152578063b5ab58dc14610165578063b633620c14610178578063feaf968c1461018b576100b4565b8063313ce567146100b95780634aa2011f146100d757806350d25bcd146100ec57806354fd4d5014610101578063668a0f02146101095780637284e41614610111575b600080fd5b6100c1610193565b6040516100ce9190610436565b60405180910390f35b6100ea6100e536600461036f565b61019c565b005b6100f46101e9565b6040516100ce91906103a7565b6100f46101ef565b6100f46101f4565b6101196101fa565b6040516100ce91906103b0565b6100f4610231565b61014161013c36600461034e565b610237565b6040516100ce959493929190610403565b6100ea610160366004610336565b610270565b6100f4610173366004610336565b6102c6565b6100f4610186366004610336565b6102d8565b6101416102ea565b60005460ff1681565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6001819055426002556003805490600061028983610444565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b60046020526000908152604090205481565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054839091929394565b803569ffffffffffffffffffff8116811461033157600080fd5b919050565b600060208284031215610347578081fd5b5035919050565b60006020828403121561035f578081fd5b61036882610317565b9392505050565b60008060008060808587031215610384578283fd5b61038d85610317565b966020860135965060408601359560600135945092505050565b90815260200190565b6000602080835283518082850152825b818110156103dc578581018301518582016040015282016103c0565b818111156103ed5783604083870101525b50601f01601f1916929092016040019392505050565b69ffffffffffffffffffff9586168152602081019490945260408401929092526060830152909116608082015260a00190565b60ff91909116815260200190565b600060001982141561046457634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220bf09a629348ba8b9554bc256df1e81818397c82d821cc154ee3a9db2d3b9b60664736f6c63430008000033",
  "bytecodeSha1": "beeba8a4b196e380b74c74b1e116dff58cb463f5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "MockV3Aggregator",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {
        "MockV3Aggregator.description": {
          "6": [
            2449,
            2489
          ]
        },
        "MockV3Aggregator.getRoundData": {
          "7": [
            1830,
            1962
          ]
        },
        "MockV3Aggregator.latestRoundData": {
          "14": [
            2183,
            2346
          ]
        },
        "MockV3Aggregator.updateAnswer": {
          "8": [
            1031,
            1053
          ],
          "9": [
            1059,
            1092
          ],
          "10": [
            1098,
            1111
          ],
          "11": [
            1117,
            1149
          ],
          "12": [
            1155,
            1198
          ],
          "13": [
            1204,
            1247
          ]
        },
        "MockV3Aggregator.updateRoundData": {
          "0": [
            1387,
            1409
          ],
          "1": [
            1415,
            1437
          ],
          "2": [
            1443,
            1471
          ],
          "3": [
            1477,
            1509
          ],
          "4": [
            1515,
            1553
          ],
          "5": [
            1559,
            1597
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorInterface",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV2V3Interface",
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101265780639a6fc8f51461012e578063a87a20ce14610152578063b5ab58dc14610165578063b633620c14610178578063feaf968c1461018b576100b4565b8063313ce567146100b95780634aa2011f146100d757806350d25bcd146100ec57806354fd4d5014610101578063668a0f02146101095780637284e41614610111575b600080fd5b6100c1610193565b6040516100ce9190610436565b60405180910390f35b6100ea6100e536600461036f565b61019c565b005b6100f46101e9565b6040516100ce91906103a7565b6100f46101ef565b6100f46101f4565b6101196101fa565b6040516100ce91906103b0565b6100f4610231565b61014161013c36600461034e565b610237565b6040516100ce959493929190610403565b6100ea610160366004610336565b610270565b6100f4610173366004610336565b6102c6565b6100f4610186366004610336565b6102d8565b6101416102ea565b60005460ff1681565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6001819055426002556003805490600061028983610444565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b60046020526000908152604090205481565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054839091929394565b803569ffffffffffffffffffff8116811461033157600080fd5b919050565b600060208284031215610347578081fd5b5035919050565b60006020828403121561035f578081fd5b61036882610317565b9392505050565b60008060008060808587031215610384578283fd5b61038d85610317565b966020860135965060408601359560600135945092505050565b90815260200190565b6000602080835283518082850152825b818110156103dc578581018301518582016040015282016103c0565b818111156103ed5783604083870101525b50601f01601f1916929092016040019392505050565b69ffffffffffffffffffff9586168152602081019490945260408401929092526060830152909116608082015260a00190565b60ff91909116815260200190565b600060001982141561046457634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220bf09a629348ba8b9554bc256df1e81818397c82d821cc154ee3a9db2d3b9b60664736f6c63430008000033",
  "deployedSourceMap": "400:2096:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1256:346;;;;;;:::i;:::-;;:::i;:::-;;541:35;;;:::i;:::-;;;;;;;:::i;458:44::-;;;:::i;623:35::-;;;:::i;2355:139::-;;;:::i;:::-;;;;;;;:::i;580:39::-;;;:::i;1606:361::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;972:280::-;;;;;;:::i;:::-;;:::i;663:52::-;;;;;;:::i;:::-;;:::i;719:56::-;;;;;;:::i;:::-;;:::i;1971:380::-;;;:::i;507:30::-;;;;;;:::o;1256:346::-;1387:22;;;;:11;:22;;;1415:12;:22;;;-1:-1:-1;1443:28:3;;;-1:-1:-1;1477:22:3;;;:9;:22;;;;;;;;:32;;;;1528:11;;1515:25;;:12;:25;;;;;:38;;;;1572:11;1559:25;;:12;:25;;;;:38;1256:346::o;541:35::-;;;;:::o;458:44::-;501:1;458:44;:::o;623:35::-;;;;:::o;2355:139::-;2449:40;;;;;;;;;;;;;;;;;2355:139;:::o;580:39::-;;;;:::o;1606:361::-;1861:19;;;1700:14;1861:19;;;:9;:19;;;;;;;;;1888:12;:22;;;;;;1918:12;:22;;;;;;1861:19;;;;1888:22;;1861:19;;1606:361::o;972:280::-;1031:12;:22;;;1077:15;1059;:33;1098:11;:13;;;-1:-1:-1;1098:13:3;;;:::i;:::-;;;;-1:-1:-1;;1127:11:3;;;1117:22;;;;:9;:22;;;;;;;;:32;;;;1168:11;;1155:25;;:12;:25;;;;;1183:15;1155:43;;;;1217:11;;1204:25;;:12;:25;;;;;;:43;972:280::o;663:52::-;;;;;;;;;;;;;:::o;719:56::-;;;;;;;;;;;;;:::o;1971:380::-;2205:11;;2053:14;2225:22;;;:9;:22;;;;;;;;;2255:12;:25;;;;;;2288:12;:25;;;;;;2205:11;1971:380;;;;;:::o;14:177:4:-;83:20;;143:22;132:34;;122:45;;112:2;;181:1;178;171:12;112:2;64:127;;;:::o;196:189::-;;307:2;295:9;286:7;282:23;278:32;275:2;;;328:6;320;313:22;275:2;-1:-1:-1;356:23:4;;265:120;-1:-1:-1;265:120:4:o;585:196::-;;696:2;684:9;675:7;671:23;667:32;664:2;;;717:6;709;702:22;664:2;745:30;765:9;745:30;:::i;:::-;735:40;654:127;-1:-1:-1;;;654:127:4:o;786:400::-;;;;;947:3;935:9;926:7;922:23;918:33;915:2;;;969:6;961;954:22;915:2;997:30;1017:9;997:30;:::i;:::-;987:40;1074:2;1059:18;;1046:32;;-1:-1:-1;1125:2:4;1110:18;;1097:32;;1176:2;1161:18;1148:32;;-1:-1:-1;905:281:4;-1:-1:-1;;;905:281:4:o;1191:175::-;1335:25;;;1323:2;1308:18;;1290:76::o;1371:603::-;;1512:2;1541;1530:9;1523:21;1573:6;1567:13;1616:6;1611:2;1600:9;1596:18;1589:34;1641:4;1654:140;1668:6;1665:1;1662:13;1654:140;;;1763:14;;;1759:23;;1753:30;1729:17;;;1748:2;1725:26;1718:66;1683:10;;1654:140;;;1812:6;1809:1;1806:13;1803:2;;;1882:4;1877:2;1868:6;1857:9;1853:22;1849:31;1842:45;1803:2;-1:-1:-1;1958:2:4;1937:15;-1:-1:-1;;1933:29:4;1918:45;;;;1965:2;1914:54;;1492:482;-1:-1:-1;;;1492:482:4:o;2161:516::-;2424:22;2473:15;;;2455:34;;2520:2;2505:18;;2498:34;;;;2563:2;2548:18;;2541:34;;;;2606:2;2591:18;;2584:34;2655:15;;;2649:3;2634:19;;2627:44;2401:3;2386:19;;2368:309::o;2682:184::-;2854:4;2842:17;;;;2824:36;;2812:2;2797:18;;2779:87::o;2871:236::-;;-1:-1:-1;;2931:17:4;;2928:2;;;-1:-1:-1;;;2971:33:4;;3027:4;3024:1;3017:15;3057:4;2978:3;3045:17;2928:2;-1:-1:-1;3099:1:4;3088:13;;2918:189::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "notice": "Based on the FluxAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant",
    "title": "MockV3Aggregator",
    "version": 1
  },
  "offset": [
    400,
    2496
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8205BF6A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x18B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x4AA2011F EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1EF JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x231 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x3 DUP2 DUP2 SSTORE PUSH1 0x1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 SLOAD DUP4 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x76302E362F74657374732F4D6F636B563341676772656761746F722E736F6C00 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x289 DUP4 PUSH2 0x444 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP4 DUP3 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE SWAP3 SLOAD DUP3 MSTORE PUSH1 0x6 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD DUP4 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x347 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x368 DUP3 PUSH2 0x317 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x384 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x38D DUP6 PUSH2 0x317 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3C0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3ED JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x464 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF MULMOD 0xA6 0x29 CALLVALUE DUP12 0xA8 0xB9 SSTORE 0x4B 0xC2 JUMP 0xDF 0x1E DUP2 DUP2 DUP4 SWAP8 0xC8 0x2D DUP3 SHR 0xC1 SLOAD 0xEE GASPRICE SWAP14 0xB2 0xD3 0xB9 0xB6 MOD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        400,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8205BF6A"
    },
    "38": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8205BF6A"
    },
    "49": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126"
    },
    "53": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9A6FC8F5"
    },
    "60": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12E"
    },
    "64": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA87A20CE"
    },
    "71": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x152"
    },
    "75": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB5AB58DC"
    },
    "82": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x165"
    },
    "86": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB633620C"
    },
    "93": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x178"
    },
    "97": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEAF968C"
    },
    "104": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18B"
    },
    "108": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB4"
    },
    "112": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMP",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "120": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4AA2011F"
    },
    "131": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD7"
    },
    "135": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x50D25BCD"
    },
    "142": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEC"
    },
    "146": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x54FD4D50"
    },
    "153": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x668A0F02"
    },
    "164": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109"
    },
    "168": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7284E416"
    },
    "175": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "EQ",
      "path": "3"
    },
    "176": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111"
    },
    "179": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "180": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        400,
        2496
      ],
      "op": "REVERT",
      "path": "3"
    },
    "185": {
      "offset": [
        507,
        537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1"
    },
    "189": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x193"
    },
    "192": {
      "fn": null,
      "jump": "i",
      "offset": [
        507,
        537
      ],
      "op": "JUMP",
      "path": "3"
    },
    "193": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCE"
    },
    "200": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "202": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x436"
    },
    "205": {
      "fn": null,
      "jump": "i",
      "offset": [
        507,
        537
      ],
      "op": "JUMP",
      "path": "3"
    },
    "206": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "209": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "210": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "DUP1",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "212": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "SUB",
      "path": "3"
    },
    "213": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        507,
        537
      ],
      "op": "RETURN",
      "path": "3"
    },
    "215": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "216": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA"
    },
    "219": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE5"
    },
    "222": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "223": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "225": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36F"
    },
    "228": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        1256,
        1602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "229": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "230": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19C"
    },
    "233": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        1256,
        1602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "234": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "235": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "STOP",
      "path": "3"
    },
    "236": {
      "offset": [
        541,
        576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "237": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "240": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "243": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        541,
        576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "244": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "245": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "247": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "248": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCE"
    },
    "251": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "252": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "253": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "256": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        541,
        576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "257": {
      "offset": [
        458,
        502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "258": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        458,
        502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "261": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        458,
        502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF"
    },
    "264": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        458,
        502
      ],
      "op": "JUMP",
      "path": "3"
    },
    "265": {
      "offset": [
        623,
        658
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "266": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        623,
        658
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "269": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        623,
        658
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F4"
    },
    "272": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "i",
      "offset": [
        623,
        658
      ],
      "op": "JUMP",
      "path": "3"
    },
    "273": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "274": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x119"
    },
    "277": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "280": {
      "fn": "MockV3Aggregator.description",
      "jump": "i",
      "offset": [
        2355,
        2494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "281": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "282": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "284": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "285": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCE"
    },
    "288": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "289": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "290": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B0"
    },
    "293": {
      "fn": "MockV3Aggregator.description",
      "jump": "i",
      "offset": [
        2355,
        2494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "294": {
      "offset": [
        580,
        619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "295": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        580,
        619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "298": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        580,
        619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x231"
    },
    "301": {
      "fn": "MockV3Aggregator.description",
      "jump": "i",
      "offset": [
        580,
        619
      ],
      "op": "JUMP",
      "path": "3"
    },
    "302": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "303": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141"
    },
    "306": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C"
    },
    "309": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "310": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "312": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34E"
    },
    "315": {
      "fn": "MockV3Aggregator.getRoundData",
      "jump": "i",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "316": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "317": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x237"
    },
    "320": {
      "fn": "MockV3Aggregator.getRoundData",
      "jump": "i",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "321": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "322": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "324": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "325": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCE"
    },
    "328": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "329": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "330": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "331": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "332": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "333": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "334": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x403"
    },
    "337": {
      "fn": "MockV3Aggregator.getRoundData",
      "jump": "i",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "338": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "339": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA"
    },
    "342": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x160"
    },
    "345": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "346": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "348": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x336"
    },
    "351": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        972,
        1252
      ],
      "op": "JUMP",
      "path": "3"
    },
    "352": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "353": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270"
    },
    "356": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        972,
        1252
      ],
      "op": "JUMP",
      "path": "3"
    },
    "357": {
      "offset": [
        663,
        715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "358": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "361": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x173"
    },
    "364": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "365": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "367": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x336"
    },
    "370": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        663,
        715
      ],
      "op": "JUMP",
      "path": "3"
    },
    "371": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "372": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C6"
    },
    "375": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        663,
        715
      ],
      "op": "JUMP",
      "path": "3"
    },
    "376": {
      "offset": [
        719,
        775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "377": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "380": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186"
    },
    "383": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "384": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "386": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x336"
    },
    "389": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        719,
        775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "390": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "391": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8"
    },
    "394": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        719,
        775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "395": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "396": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141"
    },
    "399": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EA"
    },
    "402": {
      "fn": "MockV3Aggregator.latestRoundData",
      "jump": "i",
      "offset": [
        1971,
        2351
      ],
      "op": "JUMP",
      "path": "3"
    },
    "403": {
      "offset": [
        507,
        537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "404": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        507,
        537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "406": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        507,
        537
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "407": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        507,
        537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "409": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        507,
        537
      ],
      "op": "AND",
      "path": "3"
    },
    "410": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        507,
        537
      ],
      "op": "DUP2",
      "path": "3"
    },
    "411": {
      "fn": "MockV3Aggregator.latestRoundData",
      "jump": "o",
      "offset": [
        507,
        537
      ],
      "op": "JUMP",
      "path": "3"
    },
    "412": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1256,
        1602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "413": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1409
      ],
      "op": "PUSH10",
      "path": "3",
      "statement": 0,
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "424": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1409
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "425": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1409
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "426": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1409
      ],
      "op": "AND",
      "path": "3"
    },
    "427": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1398
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "429": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1409
      ],
      "op": "DUP2",
      "path": "3"
    },
    "430": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1409
      ],
      "op": "DUP2",
      "path": "3"
    },
    "431": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1387,
        1409
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "432": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1415,
        1427
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "434": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1415,
        1437
      ],
      "op": "DUP5",
      "path": "3"
    },
    "435": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1415,
        1437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "436": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1415,
        1437
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "439": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1443,
        1471
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 2
    },
    "440": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1443,
        1471
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "441": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1443,
        1471
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "444": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "445": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "DUP3",
      "path": "3"
    },
    "446": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "447": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "449": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "451": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "452": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "DUP2",
      "path": "3"
    },
    "453": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "454": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "456": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "DUP1",
      "path": "3"
    },
    "457": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "DUP5",
      "path": "3"
    },
    "458": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1499
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "459": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1509
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "460": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1509
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "461": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1509
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "462": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1477,
        1509
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "463": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1528,
        1539
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 4
    },
    "464": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1528,
        1539
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "465": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "466": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1540
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "467": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "469": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "470": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1540
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "471": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1540
      ],
      "op": "DUP5",
      "path": "3"
    },
    "472": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "473": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1540
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "474": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1553
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "475": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "476": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1553
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "477": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1515,
        1553
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "478": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1572,
        1583
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 5
    },
    "479": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1584
      ],
      "op": "DUP2",
      "path": "3"
    },
    "480": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1584
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "481": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "483": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1584
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "484": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1584
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "485": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1584
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "486": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1584
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "487": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        1559,
        1597
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "488": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        1256,
        1602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "489": {
      "offset": [
        541,
        576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "490": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "492": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "493": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        541,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "494": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        541,
        576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "495": {
      "offset": [
        458,
        502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "496": {
      "offset": [
        501,
        502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "498": {
      "offset": [
        458,
        502
      ],
      "op": "DUP2",
      "path": "3"
    },
    "499": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        458,
        502
      ],
      "op": "JUMP",
      "path": "3"
    },
    "500": {
      "offset": [
        623,
        658
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "501": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        623,
        658
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "503": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        623,
        658
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "504": {
      "fn": "MockV3Aggregator.updateRoundData",
      "offset": [
        623,
        658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "505": {
      "fn": "MockV3Aggregator.updateRoundData",
      "jump": "o",
      "offset": [
        623,
        658
      ],
      "op": "JUMP",
      "path": "3"
    },
    "506": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "507": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x40"
    },
    "509": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "DUP1",
      "path": "3"
    },
    "510": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "511": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "DUP1",
      "path": "3"
    },
    "512": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "513": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "ADD",
      "path": "3"
    },
    "514": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "515": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "516": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "517": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "519": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "520": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "521": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x76302E362F74657374732F4D6F636B563341676772656761746F722E736F6C00"
    },
    "554": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "556": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "557": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "ADD",
      "path": "3"
    },
    "558": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2449,
        2489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "559": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        2355,
        2494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "560": {
      "fn": "MockV3Aggregator.description",
      "jump": "o",
      "offset": [
        2355,
        2494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "561": {
      "offset": [
        580,
        619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "562": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        580,
        619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "564": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        580,
        619
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "565": {
      "fn": "MockV3Aggregator.description",
      "offset": [
        580,
        619
      ],
      "op": "DUP2",
      "path": "3"
    },
    "566": {
      "fn": "MockV3Aggregator.description",
      "jump": "o",
      "offset": [
        580,
        619
      ],
      "op": "JUMP",
      "path": "3"
    },
    "567": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "568": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "PUSH10",
      "path": "3",
      "statement": 7,
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "579": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "580": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "AND",
      "path": "3"
    },
    "581": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1700,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "583": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "584": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "585": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "586": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "588": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "590": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "591": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "592": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "593": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "595": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "596": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "597": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "598": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "599": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "601": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "DUP4",
      "path": "3"
    },
    "602": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "603": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "DUP2",
      "path": "3"
    },
    "604": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "DUP5",
      "path": "3"
    },
    "605": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "606": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "607": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1918,
        1930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "609": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1918,
        1940
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "610": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1918,
        1940
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "611": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1918,
        1940
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "612": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1918,
        1940
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "613": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1918,
        1940
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "614": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1918,
        1940
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "615": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "616": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "617": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "618": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "619": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "620": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1888,
        1910
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "621": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "DUP5",
      "path": "3"
    },
    "622": {
      "fn": "MockV3Aggregator.getRoundData",
      "offset": [
        1861,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "623": {
      "fn": "MockV3Aggregator.getRoundData",
      "jump": "o",
      "offset": [
        1606,
        1967
      ],
      "op": "JUMP",
      "path": "3"
    },
    "624": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        972,
        1252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "625": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1031,
        1043
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x1"
    },
    "627": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1031,
        1053
      ],
      "op": "DUP2",
      "path": "3"
    },
    "628": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1031,
        1053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "629": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1031,
        1053
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "630": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1077,
        1092
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 9
    },
    "631": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1059,
        1074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "633": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1059,
        1092
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "634": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1109
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x3"
    },
    "636": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "637": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "638": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "641": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "644": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "DUP4",
      "path": "3"
    },
    "645": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x444"
    },
    "648": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "i",
      "offset": [
        1098,
        1111
      ],
      "op": "JUMP",
      "path": "3"
    },
    "649": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "650": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "651": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "652": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1098,
        1111
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1127,
        1138
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x3"
    },
    "657": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1127,
        1138
      ],
      "op": "DUP1",
      "path": "3"
    },
    "658": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1127,
        1138
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "659": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "661": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "662": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "DUP2",
      "path": "3"
    },
    "663": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "664": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "666": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "668": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "669": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "DUP2",
      "path": "3"
    },
    "670": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "671": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "673": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "DUP1",
      "path": "3"
    },
    "674": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "DUP4",
      "path": "3"
    },
    "675": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1139
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "676": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1149
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "677": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "678": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1149
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "679": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1117,
        1149
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "680": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1168,
        1179
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 12
    },
    "681": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1168,
        1179
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "682": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1180
      ],
      "op": "DUP3",
      "path": "3"
    },
    "683": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1180
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "684": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "686": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "687": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1180
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "688": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1180
      ],
      "op": "DUP4",
      "path": "3"
    },
    "689": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1180
      ],
      "op": "DUP3",
      "path": "3"
    },
    "690": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1180
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "691": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1183,
        1198
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "692": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1198
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "693": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1198
      ],
      "op": "DUP2",
      "path": "3"
    },
    "694": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1198
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "695": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1155,
        1198
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "696": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1217,
        1228
      ],
      "op": "SWAP3",
      "path": "3",
      "statement": 13
    },
    "697": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1217,
        1228
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "698": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "DUP3",
      "path": "3"
    },
    "699": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "700": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "702": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "703": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "704": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "705": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "706": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "707": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1229
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "708": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        1204,
        1247
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "709": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "o",
      "offset": [
        972,
        1252
      ],
      "op": "JUMP",
      "path": "3"
    },
    "710": {
      "offset": [
        663,
        715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "711": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "713": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "715": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "716": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "718": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "719": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "DUP2",
      "path": "3"
    },
    "720": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "721": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "723": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "724": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "725": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "726": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        663,
        715
      ],
      "op": "DUP2",
      "path": "3"
    },
    "727": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "o",
      "offset": [
        663,
        715
      ],
      "op": "JUMP",
      "path": "3"
    },
    "728": {
      "offset": [
        719,
        775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "729": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "731": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "733": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "734": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "736": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "737": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "DUP2",
      "path": "3"
    },
    "738": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "739": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "741": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "742": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "743": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "744": {
      "fn": "MockV3Aggregator.updateAnswer",
      "offset": [
        719,
        775
      ],
      "op": "DUP2",
      "path": "3"
    },
    "745": {
      "fn": "MockV3Aggregator.updateAnswer",
      "jump": "o",
      "offset": [
        719,
        775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "746": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "747": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2205,
        2216
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x3"
    },
    "749": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2205,
        2216
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "750": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2053,
        2067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "752": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "753": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "754": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "755": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2234
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "757": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "759": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "760": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "761": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "762": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "764": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "765": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "766": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "767": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2225,
        2247
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "768": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2255,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "770": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2255,
        2280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "771": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2255,
        2280
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "772": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2255,
        2280
      ],
      "op": "DUP2",
      "path": "3"
    },
    "773": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2255,
        2280
      ],
      "op": "DUP5",
      "path": "3"
    },
    "774": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2255,
        2280
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "775": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2255,
        2280
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "776": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2288,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "778": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2288,
        2313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "779": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2288,
        2313
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "780": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2288,
        2313
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "781": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2288,
        2313
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "782": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2288,
        2313
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "783": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2288,
        2313
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "784": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        2205,
        2216
      ],
      "op": "DUP4",
      "path": "3"
    },
    "785": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "786": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "787": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "788": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "789": {
      "fn": "MockV3Aggregator.latestRoundData",
      "offset": [
        1971,
        2351
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "790": {
      "fn": "MockV3Aggregator.latestRoundData",
      "jump": "o",
      "offset": [
        1971,
        2351
      ],
      "op": "JUMP",
      "path": "3"
    },
    "791": {
      "op": "JUMPDEST"
    },
    "792": {
      "op": "DUP1"
    },
    "793": {
      "op": "CALLDATALOAD"
    },
    "794": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "805": {
      "op": "DUP2"
    },
    "806": {
      "op": "AND"
    },
    "807": {
      "op": "DUP2"
    },
    "808": {
      "op": "EQ"
    },
    "809": {
      "op": "PUSH2",
      "value": "0x331"
    },
    "812": {
      "op": "JUMPI"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "815": {
      "op": "DUP1"
    },
    "816": {
      "op": "REVERT"
    },
    "817": {
      "op": "JUMPDEST"
    },
    "818": {
      "op": "SWAP2"
    },
    "819": {
      "op": "SWAP1"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "jump": "o",
      "op": "JUMP"
    },
    "822": {
      "op": "JUMPDEST"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "827": {
      "op": "DUP3"
    },
    "828": {
      "op": "DUP5"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "op": "SLT"
    },
    "831": {
      "op": "ISZERO"
    },
    "832": {
      "op": "PUSH2",
      "value": "0x347"
    },
    "835": {
      "op": "JUMPI"
    },
    "836": {
      "op": "DUP1"
    },
    "837": {
      "op": "DUP2"
    },
    "838": {
      "op": "REVERT"
    },
    "839": {
      "op": "JUMPDEST"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "op": "CALLDATALOAD"
    },
    "842": {
      "op": "SWAP2"
    },
    "843": {
      "op": "SWAP1"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "jump": "o",
      "op": "JUMP"
    },
    "846": {
      "op": "JUMPDEST"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "851": {
      "op": "DUP3"
    },
    "852": {
      "op": "DUP5"
    },
    "853": {
      "op": "SUB"
    },
    "854": {
      "op": "SLT"
    },
    "855": {
      "op": "ISZERO"
    },
    "856": {
      "op": "PUSH2",
      "value": "0x35F"
    },
    "859": {
      "op": "JUMPI"
    },
    "860": {
      "op": "DUP1"
    },
    "861": {
      "op": "DUP2"
    },
    "862": {
      "op": "REVERT"
    },
    "863": {
      "op": "JUMPDEST"
    },
    "864": {
      "op": "PUSH2",
      "value": "0x368"
    },
    "867": {
      "op": "DUP3"
    },
    "868": {
      "op": "PUSH2",
      "value": "0x317"
    },
    "871": {
      "jump": "i",
      "op": "JUMP"
    },
    "872": {
      "op": "JUMPDEST"
    },
    "873": {
      "op": "SWAP4"
    },
    "874": {
      "op": "SWAP3"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "op": "POP"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "jump": "o",
      "op": "JUMP"
    },
    "879": {
      "op": "JUMPDEST"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "882": {
      "op": "DUP1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "885": {
      "op": "DUP1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "888": {
      "op": "DUP6"
    },
    "889": {
      "op": "DUP8"
    },
    "890": {
      "op": "SUB"
    },
    "891": {
      "op": "SLT"
    },
    "892": {
      "op": "ISZERO"
    },
    "893": {
      "op": "PUSH2",
      "value": "0x384"
    },
    "896": {
      "op": "JUMPI"
    },
    "897": {
      "op": "DUP3"
    },
    "898": {
      "op": "DUP4"
    },
    "899": {
      "op": "REVERT"
    },
    "900": {
      "op": "JUMPDEST"
    },
    "901": {
      "op": "PUSH2",
      "value": "0x38D"
    },
    "904": {
      "op": "DUP6"
    },
    "905": {
      "op": "PUSH2",
      "value": "0x317"
    },
    "908": {
      "jump": "i",
      "op": "JUMP"
    },
    "909": {
      "op": "JUMPDEST"
    },
    "910": {
      "op": "SWAP7"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "913": {
      "op": "DUP7"
    },
    "914": {
      "op": "ADD"
    },
    "915": {
      "op": "CALLDATALOAD"
    },
    "916": {
      "op": "SWAP7"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "920": {
      "op": "DUP7"
    },
    "921": {
      "op": "ADD"
    },
    "922": {
      "op": "CALLDATALOAD"
    },
    "923": {
      "op": "SWAP6"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "926": {
      "op": "ADD"
    },
    "927": {
      "op": "CALLDATALOAD"
    },
    "928": {
      "op": "SWAP5"
    },
    "929": {
      "op": "POP"
    },
    "930": {
      "op": "SWAP3"
    },
    "931": {
      "op": "POP"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "jump": "o",
      "op": "JUMP"
    },
    "935": {
      "op": "JUMPDEST"
    },
    "936": {
      "op": "SWAP1"
    },
    "937": {
      "op": "DUP2"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "SWAP1"
    },
    "943": {
      "jump": "o",
      "op": "JUMP"
    },
    "944": {
      "op": "JUMPDEST"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "949": {
      "op": "DUP1"
    },
    "950": {
      "op": "DUP4"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "DUP4"
    },
    "953": {
      "op": "MLOAD"
    },
    "954": {
      "op": "DUP1"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "DUP6"
    },
    "957": {
      "op": "ADD"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "DUP3"
    },
    "960": {
      "op": "JUMPDEST"
    },
    "961": {
      "op": "DUP2"
    },
    "962": {
      "op": "DUP2"
    },
    "963": {
      "op": "LT"
    },
    "964": {
      "op": "ISZERO"
    },
    "965": {
      "op": "PUSH2",
      "value": "0x3DC"
    },
    "968": {
      "op": "JUMPI"
    },
    "969": {
      "op": "DUP6"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "op": "DUP4"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MLOAD"
    },
    "975": {
      "op": "DUP6"
    },
    "976": {
      "op": "DUP3"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "DUP3"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "op": "PUSH2",
      "value": "0x3C0"
    },
    "987": {
      "op": "JUMP"
    },
    "988": {
      "op": "JUMPDEST"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "DUP2"
    },
    "991": {
      "op": "GT"
    },
    "992": {
      "op": "ISZERO"
    },
    "993": {
      "op": "PUSH2",
      "value": "0x3ED"
    },
    "996": {
      "op": "JUMPI"
    },
    "997": {
      "op": "DUP4"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1000": {
      "op": "DUP4"
    },
    "1001": {
      "op": "DUP8"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "JUMPDEST"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1012": {
      "op": "NOT"
    },
    "1013": {
      "op": "AND"
    },
    "1014": {
      "op": "SWAP3"
    },
    "1015": {
      "op": "SWAP1"
    },
    "1016": {
      "op": "SWAP3"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1020": {
      "op": "ADD"
    },
    "1021": {
      "op": "SWAP4"
    },
    "1022": {
      "op": "SWAP3"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "jump": "o",
      "op": "JUMP"
    },
    "1027": {
      "op": "JUMPDEST"
    },
    "1028": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "1039": {
      "op": "SWAP6"
    },
    "1040": {
      "op": "DUP7"
    },
    "1041": {
      "op": "AND"
    },
    "1042": {
      "op": "DUP2"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "SWAP5"
    },
    "1049": {
      "op": "SWAP1"
    },
    "1050": {
      "op": "SWAP5"
    },
    "1051": {
      "op": "MSTORE"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1054": {
      "op": "DUP5"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "SWAP3"
    },
    "1057": {
      "op": "SWAP1"
    },
    "1058": {
      "op": "SWAP3"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1062": {
      "op": "DUP4"
    },
    "1063": {
      "op": "ADD"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "SWAP1"
    },
    "1066": {
      "op": "SWAP2"
    },
    "1067": {
      "op": "AND"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1070": {
      "op": "DUP3"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "op": "SWAP1"
    },
    "1077": {
      "jump": "o",
      "op": "JUMP"
    },
    "1078": {
      "op": "JUMPDEST"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1081": {
      "op": "SWAP2"
    },
    "1082": {
      "op": "SWAP1"
    },
    "1083": {
      "op": "SWAP2"
    },
    "1084": {
      "op": "AND"
    },
    "1085": {
      "op": "DUP2"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "op": "SWAP1"
    },
    "1091": {
      "jump": "o",
      "op": "JUMP"
    },
    "1092": {
      "op": "JUMPDEST"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "NOT"
    },
    "1098": {
      "op": "DUP3"
    },
    "1099": {
      "op": "EQ"
    },
    "1100": {
      "op": "ISZERO"
    },
    "1101": {
      "op": "PUSH2",
      "value": "0x464"
    },
    "1104": {
      "op": "JUMPI"
    },
    "1105": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "op": "DUP2"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1119": {
      "op": "MSTORE"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1122": {
      "op": "DUP2"
    },
    "1123": {
      "op": "REVERT"
    },
    "1124": {
      "op": "JUMPDEST"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "SWAP1"
    },
    "1130": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ecc975ef895b03357f5b8da851b1b4be0a67c528",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\";\n\n/**\n * @title MockV3Aggregator\n * @notice Based on the FluxAggregator contract\n * @notice Use this contract when you need to test\n * other contract's ability to read data from an\n * aggregator contract, but how the aggregator got\n * its answer is unimportant\n */\ncontract MockV3Aggregator is AggregatorV2V3Interface \n{\n  uint256 constant public override version = 0;\n\n  uint8 public override decimals;\n  int256 public override latestAnswer;\n  uint256 public override latestTimestamp;\n  uint256 public override latestRound;\n\n  mapping(uint256 => int256) public override getAnswer;\n  mapping(uint256 => uint256) public override getTimestamp;\n  mapping(uint256 => uint256) private getStartedAt;\n\n  constructor(\n    uint8 _decimals,\n    int256 _initialAnswer\n  ) public {\n    decimals = _decimals;\n    updateAnswer(_initialAnswer);\n  }\n\n  function updateAnswer(\n    int256 _answer\n  ) public {\n    latestAnswer = _answer;\n    latestTimestamp = block.timestamp;\n    latestRound++;\n    getAnswer[latestRound] = _answer;\n    getTimestamp[latestRound] = block.timestamp;\n    getStartedAt[latestRound] = block.timestamp;\n  }\n\n  function updateRoundData(\n    uint80 _roundId,\n    int256 _answer,\n    uint256 _timestamp,\n    uint256 _startedAt\n  ) public {\n    latestRound = _roundId;\n    latestAnswer = _answer;\n    latestTimestamp = _timestamp;\n    getAnswer[latestRound] = _answer;\n    getTimestamp[latestRound] = _timestamp;\n    getStartedAt[latestRound] = _startedAt;\n  }\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return (\n      _roundId,\n      getAnswer[_roundId],\n      getStartedAt[_roundId],\n      getTimestamp[_roundId],\n      _roundId\n    );\n  }\n\n  function latestRoundData()\n    external\n    view\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return (\n      uint80(latestRound),\n      getAnswer[latestRound],\n      getStartedAt[latestRound],\n      getTimestamp[latestRound],\n      uint80(latestRound)\n    );\n  }\n\n  function description()\n    external\n    view\n    override\n    returns (string memory)\n  {\n    return \"v0.6/tests/MockV3Aggregator.sol\";\n  }\n}\n\n// MockOracle\n// Function signatures, event signatures, log topics\n",
  "sourceMap": "400:2096:3:-:0;;;832:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;909:8;:20;;-1:-1:-1;;909:20:3;;;;;;;935:28;948:14;935:12;:28::i;:::-;832:136;;400:2096;;972:280;1031:12;:22;;;1077:15;1059;:33;1098:11;:13;;;-1:-1:-1;1098:13:3;;;:::i;:::-;;;;-1:-1:-1;;1127:11:3;;;1117:22;;;;:9;:22;;;;;;;;:32;;;;1168:11;;1155:25;;:12;:25;;;;;1183:15;1155:43;;;;1217:11;;1204:25;;:12;:25;;;;;;:43;972:280::o;14:353:4:-;;;151:2;139:9;130:7;126:23;122:32;119:2;;;172:6;164;157:22;119:2;209:9;203:16;259:4;252:5;248:16;241:5;238:27;228:2;;284:6;276;269:22;228:2;357;342:18;;;;336:25;312:5;;336:25;;-1:-1:-1;;;109:258:4:o;372:236::-;;-1:-1:-1;;432:17:4;;429:2;;;-1:-1:-1;;;472:33:4;;528:4;525:1;518:15;558:4;479:3;546:17;429:2;-1:-1:-1;600:1:4;589:13;;419:189::o;:::-;400:2096:3;;;;;;",
  "sourcePath": "contracts/test/MockV3Aggregator.sol",
  "type": "contract"
}